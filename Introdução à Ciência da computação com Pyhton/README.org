#+TITLE: Introdução à Ciência da computação com Python
#+AUTHOR: Fabio Kon (Universidade de São Paulo)
#+LANGUAGE: pt
#+OPTIONS: date:nil

Curso oferecido pela Universidade de São Paulo (USP)

* TOC :toc:
- [[#introdução-à-ciência-da-computação][Introdução à Ciência da Computação]]
  - [[#semana-1][Semana 1]]
      - [[#o-que-é-ciência-da-computação][O que é Ciência da computação?]]
        - [[#habilidades][Habilidades]]
        - [[#conceitos-básicos][Conceitos básicos]]
      - [[#software-livre][Software livre]]
  - [[#semana-3][Semana 3]]
  - [[#semana-4][Semana 4]]
    - [[#repetição-com-while][Repetição com while]]
    - [[#indicadores-de-passagem][Indicadores de passagem]]

* Introdução à Ciência da Computação
** Semana 1
**** O que é Ciência da computação?
+ Ciência recente, surgida em meados do Século XX
+ Engloba aspectos de
  + Matemática
  + Engenharia
  + Ciências naturais
***** Habilidades
+ Resolução de problemas
  + Formular um problema do mundo real em termos computacionais
  + Elaborar uma solução
  + Escrever um programa para verifica
+ Gerenciar software compostos por muitos programas
+ Construir software para lidar com grandes quantidades de dados
+ Gerenciar equipes
+ Comunicar-se com clientes e usuários
***** Conceitos básicos
+ Algoritmo
  + Lista de instruções passo a passo para resoulução de problema
+ Linguagem de programação
  + Linguagens formais, precisas e cujas instruções podem ser executadas por um computador
  + Linguagens interpretadas (ex. Lisp)
    + Código fonte é fornecido a um programa chamado interpretador, que traduz as instruções para linguagem de máquina
  + Linguagens compiladas (ex. C)
    + Código fonte é fornecida para o compilador, que cria o código objeto, interpretável pela máquina
    + Arquivo pode ser interpretado por um executor (geralmente, o sistema operacional)
  + Linguagens interpretadas e compiladas (ex. Python e Java)
    + Antes da execução do programa, um compilador traduz o código fonte para /bytecode/
    + Ao excutar o brograma, o interpretador lê os bytecodes
**** Software livre
+ O software pode e deve ser compartilhado
+ Deve atender 4 liberdades
  1. Liberdade para executar o programa
  2. Liberdade para estudar e modificar o programa
  3. Liberdade para redistribuir o programa
  4. Liberdade para melhorar e redistribuir as melhorias ao programa
+ Vantagens
  + Redução de custo e risco
  + Qualidade potencialmente maior
  + Permite ao usuário seu fornecedor
** Semana 3
+ Operadores booleanos
  + ~and~
  + ~or~
  + ~not~
** Semana 4
*** Repetição com while
#+begin_src python
  i = 0
  while (i < 10):
      print(i)
      i += 1
#+end_src 
*** Indicadores de passagem
+ Variáveis booleanas utilizadas para indicar se uma determinada condição passou a ser verdade ou não
  #+begin_src python
    decrescente = True # indicador de passagem
    anterior = int(input("Digite o primeiro número da sequência: "))

    valor = 1

    while ((valor != 0) and decrescente):
        valor = int(input("Digite o próximo número da sequência: "))
        if valor > anterior:
            decrescente = False
        anterior = valor
    if (decrescente):
        print("A sequência está em ordem decrescente")
    else:
        print("A sequência não está em ordem decrescente")
  #+end_src 
